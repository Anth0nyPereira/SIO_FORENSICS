- Encontrei a "cena verde que salta", está numa pasta na VM, é um html que está na pasta /mnt/vm/var/www/html e tem o nome de index_pwn.html, abre num browser, se quiseres vais até ao diretório www pelo terminal e depois usa este comando: xdg-open html


Sequência de ataques:
- ele tentou fazer login utilizando SQL Injection:
1º ele tentou colocar uma pelica no campo de usermail do login, e apareceu o seguinte erro:
DB Error, could not query the database
MySQL Error: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''''' at line 1
Ora, isto significa que o campo de login é vulnerável a SQL Injection
Lembrar que pelicas delimitam as strings do query
O ero tem 5 pelicas seguidas, e podemos interpretar desta forma: existe um erro no sql porque tens ''' do campo do usermail, ou seja, início de string,
0 chars, fim de string, e início de string (sem fim); depois ainda tens mais 2 pelicas provenientes do campo da password, que é required!! 3 + 2 = 5 IZI

2º ele tentou colocar isto ' -- // no campo do usermail, não deu erro de SQL Injection mas deu erro de "Invalid username, try again"
Neste caso, ele ao colocar um comentário vai anular a componente da password, pelo que é compreensível que o erro só se queixe do username.
Com esta pelica ele fechou o query do usermail, e basicamente ele recebeu como "input" 0 chars na mesma, mas e como também foi colocado comentário
e por isso o campo da password foi ignorado e o query do usermail foi "fechado", então não houve erro de SQL Syntax!! 
Ele queixou-se de username inválido! Eu diria que é porque obviamente nunca iria existir na base de dados um utilizador com nome "vazio", ou seja, 
o query acaba por retornar um valor lógico falso.

3º ele colocou no usermail=' OR 1=1 -- // e conseguiu entrar na conta de admin, mesmo sem nenhuma passe
Tal como no exemplo anterior, ele comentou o campo da password, não me vou estar a repetir.
Para obter "dados", isto é, uma correpsondência de uma conta na base de dados, alguma parte na query tem de dar valor lógico verdadeiro obrigatoriamente!
Ora, nada melhor do que garantir uma disjunção com um literal/condição sempre verdadeira... apesar do usermail introduzido ser "vazio", a condição
"vazio" OR True vai dar True por isso HEY HEY ENTREI NO SISTEMA.

dúvida 1  - como é que ele conseguiu entrar, se ambos os campos são required?? -> bem, se a minha memória não me falha os campos de login no projeto
passado acho que não tinham estes campos com required, isto é, exigiam que fosse colocado algo em ambos os inputs. Ainda não descobri muito bem mas se
ele comenta o espaço da palavra-passe, a priori significa que o input da palavra-passe deixa de ter qualquer impacto porque é como se não existisse; relativamente
ao usermail, o atacante insere sempre alguma coisa no input do usermail, por isso nunca vai ser vazio e, por isso, nunca deverá aparecer erro de campo
a ser preenchido obrigatoriamente, penso eu.

4º UI, acho que ele modificou a palavra-passe!!



